#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Oct 01, 2020 08:49:02 PM PKT  platform: Windows NT

import sys
import subprocess

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import usbshield2_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    usbshield2_support.init(root, top)
    root.mainloop()

w = None

def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    usbshield2_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("1024x600+453+226")
        top.minsize(120, 1)
        top.maxsize(1924, 1181)
        top.resizable(1, 1)
        top.title("USBShield")
        top.configure(background="#103e04")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.01, rely=0.017, relheight=0.975, relwidth=0.981)

        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#103e04")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")

        self.Button_shutdown = tk.Button(self.Frame1)
        self.Button_shutdown.place(relx=0.925, rely=0.017, height=64, width=64)
        self.Button_shutdown.configure(activebackground="#ececec")
        self.Button_shutdown.configure(activeforeground="#000000")
        self.Button_shutdown.configure(background="#c1edf0")
        self.Button_shutdown.configure(disabledforeground="#a3a3a3")
        self.Button_shutdown.configure(foreground="#103e04")
        self.Button_shutdown.configure(highlightbackground="#d9d9d9")
        self.Button_shutdown.configure(highlightcolor="black")
        self.Button_shutdown.configure(overrelief="flat")
        self.Button_shutdown.configure(pady="0")
        self.Button_shutdown.configure(relief="flat")
        self.Button_shutdown.configure(text='''Shutdown''')

        self.Button_info = tk.Button(self.Frame1)
        self.Button_info.place(relx=0.846, rely=0.017, height=64, width=64)
        self.Button_info.configure(activebackground="#ececec")
        self.Button_info.configure(activeforeground="#000000")
        self.Button_info.configure(background="#c1edf0")
        self.Button_info.configure(disabledforeground="#a3a3a3")
        self.Button_info.configure(foreground="#103e04")
        self.Button_info.configure(highlightbackground="#d9d9d9")
        self.Button_info.configure(highlightcolor="black")
        self.Button_info.configure(overrelief="flat")
        self.Button_info.configure(pady="0")
        self.Button_info.configure(relief="flat")
        self.Button_info.configure(text='''Info''')
        self.Button_info.configure(command=listFiles)

        self.Button_erase = tk.Button(self.Frame1)
        self.Button_erase.place(relx=0.1, rely=0.274, height=180, width=346)
        self.Button_erase.configure(activebackground="#ececec")
        self.Button_erase.configure(activeforeground="#000000")
        self.Button_erase.configure(background="#c1edf0")
        self.Button_erase.configure(disabledforeground="#a3a3a3")
        self.Button_erase.configure(font="-family {Segoe UI} -size 18 -weight bold -slant roman -underline 0 -overstrike 0")
        self.Button_erase.configure(foreground="#103e04")
        self.Button_erase.configure(highlightbackground="#d9d9d9")
        self.Button_erase.configure(highlightcolor="#000000")
        self.Button_erase.configure(overrelief="flat")
        self.Button_erase.configure(pady="0")
        self.Button_erase.configure(relief="flat")
        self.Button_erase.configure(text='''Secure Erase / Wipe the USB''')

        self.Button_scan = tk.Button(self.Frame1)
        self.Button_scan.place(relx=0.557, rely=0.274, height=180, width=347)
        self.Button_scan.configure(activebackground="#ececec")
        self.Button_scan.configure(activeforeground="#000000")
        self.Button_scan.configure(background="#c1edf0")
        self.Button_scan.configure(disabledforeground="#a3a3a3")
        self.Button_scan.configure(font="-family {Segoe UI} -size 18 -weight bold -slant roman -underline 0 -overstrike 0")
        self.Button_scan.configure(foreground="#103e04")
        self.Button_scan.configure(highlightbackground="#d9d9d9")
        self.Button_scan.configure(highlightcolor="#000000")
        self.Button_scan.configure(overrelief="flat")
        self.Button_scan.configure(pady="0")
        self.Button_scan.configure(relief="flat")
        self.Button_scan.configure(text='''Scan & Clean the USB''')

        self.Label_logo = tk.Label(self.Frame1)
        self.Label_logo.place(relx=0.01, rely=0.017, height=120, width=120)
        self.Label_logo.configure(activebackground="#f9f9f9")
        self.Label_logo.configure(activeforeground="black")
        self.Label_logo.configure(background="#c1edf0")
        self.Label_logo.configure(disabledforeground="#a3a3a3")
        self.Label_logo.configure(font="-family {Segoe UI} -size 12 -weight normal -slant roman -underline 0 -overstrike 0")
        self.Label_logo.configure(foreground="#103e04")
        self.Label_logo.configure(highlightbackground="#d9d9d9")
        self.Label_logo.configure(highlightcolor="black")
        self.Label_logo.configure(text='''USBShield Logo''')

        self.Label_below = tk.Label(self.Frame1)
        self.Label_below.place(relx=0.02, rely=0.872, height=70, width=970)
        self.Label_below.configure(activebackground="#f9f9f9")
        self.Label_below.configure(activeforeground="black")
        self.Label_below.configure(background="#103e04")
        self.Label_below.configure(disabledforeground="#a3a3a3")
        self.Label_below.configure(font="-family {Segoe UI} -size 12 -weight bold -slant roman -underline 0 -overstrike 0")
        self.Label_below.configure(foreground="#c1edf0")
        self.Label_below.configure(highlightbackground="#d9d9d9")
        self.Label_below.configure(highlightcolor="black")
        self.Label_below.configure(text='''The USBSHield is a dedicated system for secure erasing / wiping or scanning and cleaning the USB's against viruses
USBShield is mutually designed by Lunesys & SCO
www.lunesys.com   |   info@lunesys.com   |   Islamabad, Pakistan''')

        

    def listFiles():
        try:
            output = subprocess.run(["powershell", "ls"], stdout=subprocess.PIPE
                                    , stderr=subprocess.PIPE)
            self.Label_below["text"] = output.stdout.decode("utf-8")
        except Exception as e:
            print(e)

if __name__ == '__main__':
    vp_start_gui()





